Option Explicit
Sub RandomSample()

MakeArray

End Sub

Sub MakeArray()
Application.EnableEvents = False
    Dim MyArray As Variant
    Dim i As Integer
    Dim TryRand As Integer
    Dim RowCount As Integer
    Dim rngCurrentRegion As range
    Dim NewWs As Worksheet
    Dim CurrentWSName As String
    Dim PasteCell As String
    PasteCell = "b3"
    CurrentWSName = Application.ActiveSheet.name
    

    'Get User Input
    Dim form As New SelectionParams
    Dim rng As range
  '  Set rng = range("a1")
    Dim Quantity As Integer
    
RequestInput:
    form.Show vbModal
    Set rng = range(form.range.text)
    Quantity = form.SampleSize
    
    ' process user input
    RowCount = rng.rows.count
    If Quantity >= RowCount Then
        MsgBox ("Choose selection size that's smaller than row count")
        GoTo RequestInput
    End If

    ReDim MyArray(Quantity - 1)
    
    For i = 0 To Quantity - 1
retry:
        ' get random int values loaded into array
        TryRand = RndBetween(1, RowCount)
        If IsInArray(TryRand, MyArray) Then GoTo retry
        MyArray(i) = TryRand
    Next
    
    
    
    '' TMP Debug XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    MsgBox ("the row count is " & RowCount & " and the sample size is " & Quantity)
    '' TMP Debug XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    
    
    
    '' Paste current region of range to new worksheet
    Set rngCurrentRegion = rng.CurrentRegion
    Set NewWs = Application.ActiveWorkbook.Worksheets.add(after:=Application.ActiveWorkbook.ActiveSheet)
    If Not WorksheetExists("sample") Then
        NewWs.name = "Sample"
    End If
    rngCurrentRegion.Copy NewWs.range(PasteCell)

    '' Mark those selected
    Dim instance As Variant
    range(PasteCell).End(xlToRight).Offset(-1, 1).Value = "Selection"
    For Each instance In MyArray
        With range(PasteCell).End(xlToRight).Offset(instance - 1, 1)
        .Value = "x"
        .Interior.ColorIndex = 35
        End With
    Next

    

End Sub
' Gets random integer between low and high values
Function RndBetween(Low, High) As Integer
   Randomize
   RndBetween = Int((High - Low + 1) * Rnd + Low)
End Function

Private Function IsInArray(valToBeFound As Variant, arr As Variant) As Boolean
'DEVELOPER: Ryan Wells (wellsr.com)
'DESCRIPTION: Function to check if a value is in an array of values
'INPUT: Pass the function a value to search for and an array of values of any data type.
'OUTPUT: True if is in array, false otherwise
Dim element As Variant
On Error GoTo IsInArrayError: 'array is empty
    For Each element In arr
        If element = valToBeFound Then
            IsInArray = True
            Exit Function
        End If
    Next element
Exit Function
IsInArrayError:
On Error GoTo 0
IsInArray = False
End Function

Function WorksheetExists(sName As String) As Boolean
On Error Resume Next ''shouldn't need but just in case
    WorksheetExists = Evaluate("ISREF('" & sName & "'!A1)")
End Function
